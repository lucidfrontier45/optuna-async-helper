[project]
name = "optuna-async-helper"
description = "A Helper Library for Optuna Async Optimization"
version = "0.5.0"
authors = [{ name = "杜 世橋 Du Shiqiao", email = "lucidfrontier.45@gmail.com" }]
license = { text = "MIT" }
requires-python = ">=3.11"
dependencies = ["optuna>=4.0.0", "joblib>=1.3.2", "pydantic>=2.6.1"]
readme = "README.md"
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
urls = { "repository" = "https://github.com/lucidfrontier45/optuna-async-helper" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/optuna_async_helper"]

[tool.uv]
managed = true
dev-dependencies = [
    "pyright>=1.1.358",
    "pytest-cov>=5.0.0",
    "taskipy>=1.13.0",
    "ruff>=0.6.3",
]

[tool.taskipy.tasks]
pyright_lint = "pyright ."
ruff_format = "ruff format ."
ruff_lint = "ruff check ."
ruff_fix = "ruff check --fix ."
test = "pytest tests"
test_with_coverage = "pytest tests --cov=optuna_async_helper --cov-report=term --cov-report=xml"
format = "task ruff_fix && task ruff_format"
lint = "task ruff_lint && task pyright_lint"
check = "task format && task lint && task test"

[tool.pytest.ini_options]
filterwarnings = ["ignore::FutureWarning"]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "I",
    "B",
    "RUF",
    "UP",
    "N",
    "SIM",
    "A",
    "S",
    "DTZ",
    "PIE",
    "PLE",
]
# add directory names to exclude from analysis
exclude = ["tests/**/*", "deps/**/*"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ['F401']

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "basic"
# add directory names to exclude from analysis
ignore = ["deps"]
